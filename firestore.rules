rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if user is a member of a group
    function isGroupMember(groupId) {
      return request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
    }
    
    // Function to check if user is an owner of a group
    function isGroupOwner(groupId) {
      return groupId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups;
    }
    
    match /users/{userId} {
      // User rules remain the same
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /groups/{groupId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      
      // Allow updates by both owners and members, but only owners can delete
      allow update: if request.auth != null && (isGroupOwner(groupId) || isGroupMember(groupId));
      allow delete: if request.auth != null && isGroupOwner(groupId);
      
      // Budget-related fields can be edited by all members
      match /budget/{budgetId} {
        allow read, write: if request.auth != null && (isGroupOwner(groupId) || isGroupMember(groupId));
      }

      match /members/{memberId} {
        allow read: if request.auth != null && (isGroupOwner(groupId) || isGroupMember(groupId));
        // Only group owners can modify member list
        allow write: if request.auth != null && isGroupOwner(groupId);
      }
    }

    match /trackers/{trackerId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (isGroupOwner(trackerId) || isGroupMember(trackerId));
      allow delete: if request.auth != null && isGroupOwner(trackerId);

      match /categories/{categoryId} {
        allow read, write: if request.auth != null && (isGroupOwner(trackerId) || isGroupMember(trackerId));
      }

      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && (isGroupOwner(trackerId) || isGroupMember(trackerId));
      }
    }
  }
}