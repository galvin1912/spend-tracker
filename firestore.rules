rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /groups/{groupId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && groupId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups;

      match /members/{memberId} {
        allow read: if request.auth != null && (groupId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups || request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members);
        allow write: if request.auth != null && groupId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups;
      }
    }

    match /trackers/{trackerId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (trackerId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups || request.auth.uid in get(/databases/$(database)/documents/groups/$(trackerId)).data.members);
      allow delete: if request.auth != null && trackerId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups;

      match /categories/{categoryId} {
        allow read, write: if request.auth != null && (trackerId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups || request.auth.uid in get(/databases/$(database)/documents/groups/$(trackerId)).data.members);
      }

      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && (trackerId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groups || request.auth.uid in get(/databases/$(database)/documents/groups/$(trackerId)).data.members);
      }
    }
  }
}